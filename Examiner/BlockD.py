from tkinter import *
from tkinter import ttk

class BlockD(): 
    def __init__(self, notebook, position_question, position_answer):
        frame_5 = ttk.Frame(notebook)
        frame_5.pack(fill=BOTH, expand=True)
        notebook.add(frame_5, text="–í–æ–ø—Ä–æ—Å—ã: 22-25")
        self.selected = {1: 0, 2: 0, 3: 0, 4: 0}

        answers = ['–¢–°–ù', '–¢–µ–ø–ª–æ', '–¢–°', '–¢–ï–ü', '—Ç/c']
        selected_answer_1 = StringVar()
        self.label_question_1 = ttk.Label(frame_5, text="üìå –í–æ–ø—Ä–æ—Å 22: –ö–∞–∫ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å —Å–ª–æ–≤–æ: —Ç–µ–ø–ª–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–µ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—ã?", font=("Times New Roman", 14, "bold"))
        self.label_question_1.pack(fill="x", pady=[25, 10], padx=10)

        def select_1(): 
            if selected_answer_1.get() == '–¢–°':
                self.selected[1] = 1
            else:
                self.selected[1] = 0

        for item in answers:
            item_btn = ttk.Radiobutton(frame_5, text=item, variable=selected_answer_1, value=item, command=select_1)
            item_btn.pack(**position_answer)

        self.enabled_1 = IntVar()
        self.enabled_2 = IntVar()
        self.enabled_3 = IntVar()
        self.enabled_4 = IntVar()
        self.enabled_5 = IntVar()

        def select_3():
            if all([self.enabled_2.get(), self.enabled_1.get()]):
                self.selected[3] = 1
            else:
                self.selected[3] = 0

        self.label_question_2 = ttk.Label(frame_5, text="üìå –í–æ–ø—Ä–æ—Å 23: –ü—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –∫–æ—Ç–µ–ª—å–Ω–æ–π –æ—Ç —ç/—ç, –≥–∞–∑–∞ –∏–ª–∏ –•–í–° –∫–æ–º—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–æ–±—â–∏—Ç—å —Å–æ–≥–ª–∞—Å–Ω–æ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç—É?", font=("Times New Roman", 14, "bold"), wraplength=830)
        self.label_question_2.pack(fill="x", pady=[25, 10], padx=10)
        checkbutton_1 = ttk.Checkbutton(frame_5, text="–†—É–∫–æ–≤–æ–¥—è—â–∏–π —Å–æ—Å—Ç–∞–≤", variable=self.enabled_1, command=select_3)
        checkbutton_1.pack(**position_answer)
        checkbutton_2 = ttk.Checkbutton(frame_5, text="–ï–î–î–°", variable=self.enabled_2, command=select_3)
        checkbutton_2.pack(**position_answer)
        checkbutton_3 = ttk.Checkbutton(frame_5, text="–†–°–û", variable=self.enabled_3, command=select_3)
        checkbutton_3.pack(**position_answer)
        checkbutton_4 = ttk.Checkbutton(frame_5, text="–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏ –∏ –ñ–ö–•", variable=self.enabled_4, command=select_3)
        checkbutton_4.pack(**position_answer)
        checkbutton_5 = ttk.Checkbutton(frame_5, text="–ú–∏–Ω—Å—Ç—Ä–æ–π –†–§", variable=self.enabled_5, command=select_3)
        checkbutton_5.pack(**position_answer)

        answers = ['–ö–∞–∂–¥—ã–µ 2 —á–∞—Å–∞', '–ö–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç', '–ö–∞–∂–¥—ã–π —á–∞—Å', '–ù–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è', '–û–∂–∏–¥–∞—Ç—å, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–¥–∞–¥—É—Ç —Å–∞–º–∏']
        selected_answer_2 = StringVar()
        self.label_question_3 = ttk.Label(frame_5, text="üìå –í–æ–ø—Ä–æ—Å 24: –ü—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –∫–æ—Ç–µ–ª—å–Ω–æ–π –æ—Ç —ç/—ç, –≥–∞–∑–∞ –∏–ª–∏ –•–í–°, –∫–∞–∫ —á–∞—Å—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —Å—Ç–∞—Ç—É—Å —Ä–∞–±–æ—Ç?", font=("Times New Roman", 14, "bold"), wraplength=770)
        self.label_question_3.pack(fill="x", pady=[25, 10], padx=10)

        def select_2(): 
            if selected_answer_2.get() == '–ö–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç':
                self.selected[2] = 1 
            else:
                self.selected[2] = 0

        for item in answers:
            item_btn = ttk.Radiobutton(frame_5, text=item, variable=selected_answer_2, value=item, command=select_2)
            item_btn.pack(**position_answer)
   
        self.enabled_6 = IntVar()
        self.enabled_7 = IntVar()
        self.enabled_8 = IntVar()

        def select_4():
            if all([self.enabled_6.get(), self.enabled_7.get(), self.enabled_8.get()]):
                self.selected[4] = 1
            else:
                self.selected[4] = 0

        self.label_question_4 = ttk.Label(frame_5, text="üìå –í–æ–ø—Ä–æ—Å 25: –ß—Ç–æ –≤ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –Ω—É–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –≤ –∂—É—Ä–Ω–∞–ª –ø—Ä–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–º –∑–≤–æ–Ω–∫–µ –≤ —Ö–æ–¥–µ —É—Ç–æ—á–Ω–µ–Ω–∏—è/—Å–±–æ—Ä–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∏–Ω—Ü–∏–¥–µ–Ω—Ç—É —É –ï–î–î–° –∏–ª–∏ –†–°–û?", font=("Times New Roman", 14, "bold"), wraplength=830)
        self.label_question_4.pack(fill="x", pady=[25, 10], padx=10)
        checkbutton_6 = ttk.Checkbutton(frame_5, text="–î–∞—Ç—É –∏ –≤—Ä–µ–º—è –∑–≤–æ–Ω–∫–∞", variable=self.enabled_6, command=select_4)
        checkbutton_6.pack(**position_answer)
        checkbutton_7 = ttk.Checkbutton(frame_5, text="–î–æ–ª–∂–Ω–æ—Å—Ç—å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞", variable=self.enabled_7, command=select_4)
        checkbutton_7.pack(**position_answer)
        checkbutton_8 = ttk.Checkbutton(frame_5, text="–§.–ò.–û. —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞", variable=self.enabled_8, command=select_4)
        checkbutton_8.pack(**position_answer)

    def check(self): 
        right_counter = 0

        if self.selected[1] == 1:
            right_counter += 1
            self.label_question_1.configure(foreground="#5c9682")
        else:
            self.label_question_1.configure(foreground="#CD5C5C")
        
        if self.selected[2] == 1:
            right_counter += 1
            self.label_question_3.configure(foreground="#5c9682")
        else:
            self.label_question_3.configure(foreground="#CD5C5C")

        if self.selected[3] == 1:
            right_counter += 1
            self.label_question_2.configure(foreground="#5c9682")
        else:
            self.label_question_2.configure(foreground="#CD5C5C")
        
        if self.selected[4] == 1:
            right_counter += 1
            self.label_question_4.configure(foreground="#5c9682")
        else:
            self.label_question_4.configure(foreground="#CD5C5C")

        return right_counter
    