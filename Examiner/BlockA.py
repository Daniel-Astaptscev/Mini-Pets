from tkinter import *
from tkinter import ttk

class BlockA():
    def __init__(self, notebook, position_question, position_answer):
        frame_2 = ttk.Frame(notebook)
        frame_2.pack(fill=BOTH, expand=True)
        notebook.add(frame_2, text="–í–æ–ø—Ä–æ—Å—ã: 1-9")

        self.label_question_1 = ttk.Label(frame_2, text="üìå –í–æ–ø—Ä–æ—Å 1: –ù–∞—á–∞–ª—å–Ω–∏–∫ —Å–ª—É–∂–±—ã –ö–ò–ü–∏–ê —ç—Ç–æ (—Ç–æ–ª—å–∫–æ —Ñ–∞–º–∏–ª–∏—è)?", font=("Times New Roman", 14, "bold"))
        self.label_question_1.pack(**position_question)
        self.entry_answer_1 = ttk.Entry(frame_2, font=("Times New Roman", 14), width=50)
        self.entry_answer_1.pack(**position_answer)

        self.label_question_2 = ttk.Label(frame_2, text="üìå –í–æ–ø—Ä–æ—Å 2: –ù–∞—á–∞–ª—å–Ω–∏–∫ –≥–∞–∑–æ–≤–æ–π —Å–ª—É–∂–±—ã —ç—Ç–æ (—Ç–æ–ª—å–∫–æ —Ñ–∞–º–∏–ª–∏—è)?", font=("Times New Roman", 14, "bold"))
        self.label_question_2.pack(**position_question)
        self.entry_answer_2 = ttk.Entry(frame_2, font=("Times New Roman", 14), width=50)
        self.entry_answer_2.pack(**position_answer)

        self.label_question_3 = ttk.Label(frame_2, text="üìå –í–æ–ø—Ä–æ—Å 3: –ù–∞—á–∞–ª—å–Ω–∏–∫ —Å–ª—É–∂–±—ã —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏ —ç—Ç–æ (—Ç–æ–ª—å–∫–æ —Ñ–∞–º–∏–ª–∏—è)?", font=("Times New Roman", 14, "bold"))
        self.label_question_3.pack(**position_question)
        self.entry_answer_3 = ttk.Entry(frame_2, font=("Times New Roman", 14), width=50)
        self.entry_answer_3.pack(**position_answer)

        self.label_question_4 = ttk.Label(frame_2, text="üìå –í–æ–ø—Ä–æ—Å 4: –ì–ª–∞–≤–Ω—ã–π —Ç–µ–ø–ª–æ—ç–Ω–µ—Ä–≥–µ—Ç–∏–∫ —ç—Ç–æ (—Ç–æ–ª—å–∫–æ —Ñ–∞–º–∏–ª–∏—è)?", font=("Times New Roman", 14, "bold"))
        self.label_question_4.pack(**position_question)
        self.entry_answer_4 = ttk.Entry(frame_2, font=("Times New Roman", 14), width=50)
        self.entry_answer_4.pack(**position_answer)

        self.label_question_5 = ttk.Label(frame_2, text="üìå –í–æ–ø—Ä–æ—Å 5: –ù–∞—á–∞–ª—å–Ω–∏–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏ —ç—Ç–æ (—Ç–æ–ª—å–∫–æ —Ñ–∞–º–∏–ª–∏—è)?", font=("Times New Roman", 14, "bold"))
        self.label_question_5.pack(**position_question)
        self.entry_answer_5 = ttk.Entry(frame_2, font=("Times New Roman", 14), width=50)
        self.entry_answer_5.pack(**position_answer)

        self.label_question_6 = ttk.Label(frame_2, text="üìå –í–æ–ø—Ä–æ—Å 6: –ì–ª–∞–≤–Ω—ã–π –∏–Ω–∂–µ–Ω–µ—Ä —ç—Ç–æ (—Ç–æ–ª—å–∫–æ —Ñ–∞–º–∏–ª–∏—è)?", font=("Times New Roman", 14, "bold"))
        self.label_question_6.pack(**position_question)
        self.entry_answer_6 = ttk.Entry(frame_2, font=("Times New Roman", 14), width=50)
        self.entry_answer_6.pack(**position_answer)

        self.label_question_7 = ttk.Label(frame_2, text="üìå –í–æ–ø—Ä–æ—Å 7: –ì–µ–Ω–µ—Ä–∞–ª—å–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä –û–û–û ¬´–°–∞–º–†–≠–ö-–≠–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—è¬ª —ç—Ç–æ (—Ç–æ–ª—å–∫–æ —Ñ–∞–º–∏–ª–∏—è)?", font=("Times New Roman", 14, "bold"))
        self.label_question_7.pack(**position_question)
        self.entry_answer_7 = ttk.Entry(frame_2, font=("Times New Roman", 14), width=50)
        self.entry_answer_7.pack(**position_answer)

        self.label_question_8 = ttk.Label(frame_2, text="üìå –í–æ–ø—Ä–æ—Å 8: –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –¥–∏—Ä–µ–∫—Ç–æ—Ä –û–û–û ¬´–°–∞–º–†–≠–ö-–≠–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—è¬ª —ç—Ç–æ (—Ç–æ–ª—å–∫–æ —Ñ–∞–º–∏–ª–∏—è)?", font=("Times New Roman", 14, "bold"))
        self.label_question_8.pack(**position_question)
        self.entry_answer_8 = ttk.Entry(frame_2, font=("Times New Roman", 14), width=50)
        self.entry_answer_8.pack(**position_answer)

        self.label_question_9 = ttk.Label(frame_2, text="üìå –í–æ–ø—Ä–æ—Å 9: –ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ —Ñ–∞–º–∏–ª–∏–∏ –Ω–∞—á–∞–ª—å–Ω–∏–∫–æ–≤ —É—á–∞—Å—Ç–∫–æ–≤ (–±–µ–∑ –∑–∞–ø—è—Ç—ã—Ö, —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª)?", font=("Times New Roman", 14, "bold"))
        self.label_question_9.pack(**position_question)
        self.text_answer_9 = Text(frame_2, font=("Times New Roman", 14), width=75, height=2, wrap='word')
        self.text_answer_9.pack(**position_answer)

    def check(self): 
        right_counter = 0
        
        if self.entry_answer_1.get().lower() == '–∫—É–≤–∏–Ω':
            self.entry_answer_1.configure(state='disabled')
            self.label_question_1.configure(foreground="#5c9682")
            right_counter += 1
        else:        
            self.entry_answer_1.configure(state='disabled')
            self.label_question_1.configure(foreground="#CD5C5C")

        if self.entry_answer_2.get().lower() == '–∫–æ–ø—ã–ª–æ–≤':
            right_counter += 1
            self.entry_answer_2.configure(state='disabled')
            self.label_question_2.configure(foreground="#5c9682")
        else:
            self.entry_answer_2.configure(state='disabled')
            self.label_question_2.configure(foreground="#CD5C5C")

        if self.entry_answer_3.get().lower() == '—à–∞–º–∞–µ–≤':
            right_counter += 1
            self.entry_answer_3.configure(state='disabled')
            self.label_question_3.configure(foreground="#5c9682")
        else:
            self.entry_answer_3.configure(state='disabled')
            self.label_question_3.configure(foreground="#CD5C5C")

        if self.entry_answer_4.get().lower() == '–∞—Ç–∞–µ–≤':
            right_counter += 1
            self.entry_answer_4.configure(state='disabled')
            self.label_question_4.configure(foreground="#5c9682")
        else:
            self.entry_answer_4.configure(state='disabled')
            self.label_question_4.configure(foreground="#CD5C5C")

        if self.entry_answer_5.get().lower() == '—Ç–µ–º–∏—Ä–±—É–ª–∞—Ç–æ–≤':
            right_counter += 1
            self.entry_answer_5.configure(state='disabled')
            self.label_question_5.configure(foreground="#5c9682")
        else:
            self.entry_answer_5.configure(state='disabled')
            self.label_question_5.configure(foreground="#CD5C5C")

        if self.entry_answer_6.get().lower() == '–º–∞–ª—ã—à–µ–≤':
            right_counter += 1
            self.entry_answer_6.configure(state='disabled')
            self.label_question_6.configure(foreground="#5c9682")
        else:
            self.entry_answer_6.configure(state='disabled')
            self.label_question_6.configure(foreground="#CD5C5C")

        if self.entry_answer_7.get().lower() == '–≥–∞–¥–∞–ª–∏–Ω':
            right_counter += 1
            self.entry_answer_7.configure(state='disabled')
            self.label_question_7.configure(foreground="#5c9682")
        else:
            self.entry_answer_7.configure(state='disabled')
            self.label_question_7.configure(foreground="#CD5C5C")

        if self.entry_answer_8.get().lower() == '–ª–µ–≤–∏–Ω':
            right_counter += 1
            self.entry_answer_8.configure(state='disabled')
            self.label_question_8.configure(foreground="#5c9682")
        else:
            self.entry_answer_8.configure(state='disabled')
            self.label_question_8.configure(foreground="#CD5C5C")

        check_set = {'–∫–æ–∑–ª–æ–≤', '–∫–∞—Ä–∞—Å–µ–≤', '—Å—Ç–∞–≤–∏–Ω', '–∫–∞—Ä–ø–µ–∫–∏–Ω', '–ø–µ—Ç—Ä–æ–≤', '–∫–∞–∑–∞—Ä–∏–Ω', '—É–∫–æ–ª–æ–≤', '—à–∏—Ä–æ–∫–æ–≤', '–∫–ª—è–∫—É–Ω', '—Å–∏–º–æ–Ω–æ–≤'} 
        if set(i.lower() for i in self.text_answer_9.get("1.0", "end").split()) == check_set:
            right_counter += 1
            self.text_answer_9.configure(state='disabled')
            self.label_question_9.configure(foreground="#5c9682")
        else:
            self.text_answer_9.configure(state='disabled')
            self.label_question_9.configure(foreground="#CD5C5C")

        return right_counter
    