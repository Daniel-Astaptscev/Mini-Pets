from tkinter import *
from tkinter import ttk

class BlockH(): 
    def __init__(self, notebook, position_question, position_answer):
        frame_9 = ttk.Frame(notebook)
        frame_9.pack(fill=BOTH, expand=True)
        notebook.add(frame_9, text="–í–æ–ø—Ä–æ—Å—ã: 39-44")

        self.label_question_1 = ttk.Label(frame_9, text="üìå –í–æ–ø—Ä–æ—Å 39: –ö–∞–∫ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ—Ç—Å—è –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä–∞ –õ–≠–ü (–¥–≤–∞ —Å–ª–æ–≤–∞)?", font=("Times New Roman", 14, "bold"), wraplength=800)
        self.label_question_1.pack(**position_question)
        self.entry_answer_1 = ttk.Entry(frame_9, font=("Times New Roman", 14), width=50)
        self.entry_answer_1.pack(**position_answer)

        self.label_question_2 = ttk.Label(frame_9, text="üìå –í–æ–ø—Ä–æ—Å 40: –ö–∞–∫ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ—Ç—Å—è –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä–∞ –ö–ö (–¥–≤–∞ —Å–ª–æ–≤–∞)?", font=("Times New Roman", 14, "bold"), wraplength=800)
        self.label_question_2.pack(**position_question)
        self.entry_answer_2 = ttk.Entry(frame_9, font=("Times New Roman", 14), width=50)
        self.entry_answer_2.pack(**position_answer)

        self.label_question_3 = ttk.Label(frame_9, text="üìå –í–æ–ø—Ä–æ—Å 41: –ö–∞–∫ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ—Ç—Å—è –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä–∞ –£–ö (–¥–≤–∞ —Å–ª–æ–≤–∞)?", font=("Times New Roman", 14, "bold"), wraplength=800)
        self.label_question_3.pack(**position_question)
        self.entry_answer_3 = ttk.Entry(frame_9, font=("Times New Roman", 14), width=50)
        self.entry_answer_3.pack(**position_answer)

        self.label_question_4 = ttk.Label(frame_9, text="üìå –í–æ–ø—Ä–æ—Å 42: –ö–∞–∫ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ—Ç—Å—è –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä–∞ –ú–ü –∏–ª–∏ –ú–£–ü (–¥–≤–∞ —Å–ª–æ–≤–∞)?", font=("Times New Roman", 14, "bold"), wraplength=800)
        self.label_question_4.pack(**position_question)
        self.entry_answer_4 = ttk.Entry(frame_9, font=("Times New Roman", 14), width=50)
        self.entry_answer_4.pack(**position_answer)

        self.label_question_5 = ttk.Label(frame_9, text="üìå –í–æ–ø—Ä–æ—Å 43: –ù–∞ –∫–∞–∫–∏—Ö —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–æ–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–∫–∞—Ö –≤ –≥—Ä—É–ø–ø–µ –∫–æ–º–ø–∞–Ω–∏–π –°–∞–º–†–≠–ö –Ω–∞—Ö–æ–¥—è—Ç—Å—è –¥–∏—Å–ø–µ—Ç–µ—Ä—Å–∫–∏–µ —Å–ª—É–∂–±—ã? (—á–∏—Å–ª–∞, —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª)?", font=("Times New Roman", 14, "bold"), wraplength=800)
        self.label_question_5.pack(**position_question)
        self.entry_answer_5 = ttk.Entry(frame_9, font=("Times New Roman", 14), width=50)
        self.entry_answer_5.pack(**position_answer)

        self.label_question_6 = ttk.Label(frame_9, text="üìå –í–æ–ø—Ä–æ—Å 44: –ö–∞–∫ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ—Ç—Å—è –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä–∞ –¶–¢–ü (—Ç—Ä–∏ —Å–ª–æ–≤–∞)??", font=("Times New Roman", 14, "bold"), wraplength=800)
        self.label_question_6.pack(**position_question)
        self.entry_answer_6 = ttk.Entry(frame_9, font=("Times New Roman", 14), width=50)
        self.entry_answer_6.pack(**position_answer)

    def check(self): 
        right_counter = 0

        if self.entry_answer_1.get().lower() == '–ª–∏–Ω–∏—è —ç–ª–µ–∫—Ç—Ä–æ–ø–µ—Ä–µ–¥–∞—á':
            right_counter += 1
            self.entry_answer_1.configure(state='disabled')
            self.label_question_1.configure(foreground="#5c9682")
        else:
            self.entry_answer_1.configure(state='disabled')
            self.label_question_1.configure(foreground="#CD5C5C")

        if self.entry_answer_2.get().lower() == '–∫–∞–Ω–∞–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–æ–ª–ª–µ–∫—Ç–æ—Ä' or self.entry_answer_2.get().lower() == '–∫–∞–±–µ–ª—å–Ω—ã–π –∫–æ–ª–æ–¥–µ—Ü':
            right_counter += 1
            self.entry_answer_2.configure(state='disabled')
            self.label_question_2.configure(foreground="#5c9682")
        else:
            self.entry_answer_2.configure(state='disabled')
            self.label_question_2.configure(foreground="#CD5C5C")

        if self.entry_answer_3.get().lower() == '—É–ø—Ä–∞–≤–ª—è—é—â–∞—è –∫–æ–º–ø–∞–Ω–∏—è':
            right_counter += 1
            self.entry_answer_3.configure(state='disabled')
            self.label_question_3.configure(foreground="#5c9682")
        else:
            self.entry_answer_3.configure(state='disabled')
            self.label_question_3.configure(foreground="#CD5C5C")

        if self.entry_answer_4.get().lower() == '–º—É–Ω–∏—Ü–∏–ø–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ':
            right_counter += 1
            self.entry_answer_4.configure(state='disabled')
            self.label_question_4.configure(foreground="#5c9682")
        else:
            self.entry_answer_4.configure(state='disabled')
            self.label_question_4.configure(foreground="#CD5C5C")

        if '4' in self.entry_answer_5.get() and '6' in self.entry_answer_5.get() and '10' in self.entry_answer_5.get():
            right_counter += 1
            self.entry_answer_5.configure(state='disabled')
            self.label_question_5.configure(foreground="#5c9682")
        else:
            self.entry_answer_5.configure(state='disabled')
            self.label_question_5.configure(foreground="#CD5C5C")

        if self.entry_answer_6.get().lower() == '—Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ç–µ–ø–ª–æ–≤–æ–π –ø—É–Ω–∫—Ç':
            right_counter += 1
            self.entry_answer_6.configure(state='disabled')
            self.label_question_6.configure(foreground="#5c9682")
        else:
            self.entry_answer_6.configure(state='disabled')
            self.label_question_6.configure(foreground="#CD5C5C")

        return right_counter   
    